name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: back-end/package-lock.json
      
      - name: Install dependencies
        working-directory: ./back-end
        run: npm ci
      
      - name: Lint
        working-directory: ./back-end
        run: npm run lint
      
      - name: Run tests
        working-directory: ./back-end
        run: npm test
        env:
          MONGODB_URI: mongodb://localhost:27017/prompt-test
          JWT_SECRET: test_jwt_secret
      
      - name: Run e2e tests
        working-directory: ./back-end
        run: npm run test:e2e
        env:
          MONGODB_URI: mongodb://localhost:27017/prompt-test
          JWT_SECRET: test_jwt_secret
      
      - name: Build backend Docker image
        run: docker build -t prompt-backend:${{ github.sha }} ./back-end
  
  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --watch=false --browsers=ChromeHeadless
      
      - name: Build frontend Docker image
        run: docker build -t prompt-frontend:${{ github.sha }} ./frontend
  
  deploy:
    needs: [build-and-test-backend, build-and-test-frontend]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./back-end
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/prompt-backend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/prompt-backend:${{ github.sha }}
      
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/prompt-frontend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/prompt-frontend:${{ github.sha }}
      
      # Add deployment steps here (e.g., to Kubernetes, AWS ECS, etc.)
      # This is a placeholder for actual deployment steps
      - name: Deploy
        run: echo "Deployment would happen here"